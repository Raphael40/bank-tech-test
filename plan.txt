Code breakdown: 
The user has a bank account (class)
the user can deposit money
the user can withdraw money
the date of transactions and withdrawals is recorded
a record of all transactions can be printed

mvp: 
A single account class with a balance variable set to 0.
A print function that prints the balance
A deposit function that adds to the total by a chosen amount.
A withdraw function that subtracts from the total

next features: 
print function can print the balance history
print function also prints the deposit or withdrawal amount per transaction

final feature: 
the date of each transaction is recorded and included in print

mvp model:

class Account
  inititalize
    @balance = 0
    @transactions = [[1000, 1000]]
  end


  print_balance
    template = 'date || credit || debit || balance'
    print template \n + || + balance
  end

  deposit(x)
    balance + x
    transactions << [x || balance]
  end

  withdraw(x)
    balance - x
  end
end

new plan:
mvp:

account = Account.new
account.print = 'date || credit || debit || balance'

account = Account.new
account.deposit(1000)
account.print = 'date || credit || debit || balance' \n || || || 1000


account = Account.new
account.withdraw(500)
account.print = 'date || credit || debit || balance' \n || || || -500
